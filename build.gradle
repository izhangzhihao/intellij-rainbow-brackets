buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.3.4"
    id "com.adarshr.test-logger" version "1.2.0"
    id "de.undercouch.download" version "3.4.2"
}

testlogger {
    theme 'mocha'
}

repositories {
    mavenLocal()
    maven { url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

apply plugin: "idea"
apply plugin: "kotlin"
apply plugin: "org.jetbrains.intellij"
apply plugin: "jacoco"

intellij {
    pluginName name

    version ideaVersion
    downloadSources Boolean.valueOf(downloadIdeaSources)
    updateSinceUntilBuild = false

    sandboxDirectory project.rootDir.canonicalPath + "/.sandbox"
    plugins "org.jetbrains.kotlin:$kotlinVersion-release-IJ2017.2-1", 'org.intellij.scala:2017.2.7', 'JavaScriptLanguage', 'CSS', 'Dart:172.3317.48', 'Groovy', 'properties', 'org.jetbrains.plugins.ruby:2017.2.20170906', 'com.jetbrains.php:172.4155.41', 'java-i18n'
}

publishPlugin {
    def publishPassword = "$System.env.publishPassword"
    username publishUsername
    password publishPassword
    channels publishChannels
}

idea {
    project {
        jdkName = javaVersion
        languageLevel = javaVersion
    }
}

dependencies {
    testCompile("io.kotlintest:kotlintest:2.0.7")
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

jar.archiveName = "intellij-rainbow-brackets.jar"

[compileKotlin, compileTestKotlin]*.kotlinOptions {
    languageVersion = kotlinLanguageVersion
    apiVersion = kotlinTargetVersion
    jvmTarget = javaVersion
    freeCompilerArgs = ["-Xskip-runtime-version-check"]
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

check.dependsOn jacocoTestReport

def verifierVersion = "1.178"

task downloadIntellijPluginVerifier(type: Download) {
    src "https://dl.bintray.com/jetbrains/intellij-plugin-service/org/jetbrains/intellij/plugins/verifier-cli/$verifierVersion/verifier-cli-$verifierVersion-all.jar"
    dest buildDir
    overwrite false
}

task verifyPluginCompatibility(type: Exec, dependsOn: ['downloadIntellijPluginVerifier']) {
    workingDir buildDir
    executable "sh"
    args "-c", "java -jar verifier-cli-$verifierVersion-all.jar check-plugin distributions/*.zip ~/.gradle/caches/modules-2/files-2.1/com.jetbrains.intellij.idea/ideaIC/2017.2/5155889067278eb216234aa0eeb8e1944644624c/ideaIC-2017.2"
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/settings/**'
            ])
        })
    }
}

check.dependsOn verifyPluginCompatibility
check.dependsOn verifyPlugin