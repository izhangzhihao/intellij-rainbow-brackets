name: Build
on: [push, pull_request]
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      # Run detekt, ktlint and tests
      - name: Run Linters and Test
        run: ./gradlew check

      # Run verifyPlugin Gradle task
      - name: Verify Plugin
        run: ./gradlew verifyPlugin

      # Set environment variables
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          IDE_VERSIONS="$(echo "$PROPERTIES" | grep "^pluginVerifierIdeVersions:" | base64)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          NAME="intellij-rainbow-brackets"
          ARTIFACT="${NAME}-${VERSION}.zip"

          echo "::set-output name=ideVersions::$IDE_VERSIONS"
          echo "::set-output name=pluginVerifierHomeDir::~/.pluginVerifier"
          echo "::set-output name=artifact::$ARTIFACT"

      # Cache Plugin Verifier IDEs
      - name: Setup Plugin Verifier IDEs Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.properties.outputs.pluginVerifierHomeDir }}/ides
          key: ${{ runner.os }}-plugin-verifier-${{ steps.properties.outputs.ideVersions }}

      # Run IntelliJ Plugin Verifier action using GitHub Action
      - name: Verify Plugin
        run: ./gradlew runPluginVerifier -Pplugin.verifier.home.dir=${{ steps.properties.outputs.pluginVerifierHomeDir }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: UnZipMe
          path: ./build/distributions/${{ steps.properties.outputs.artifact }}
  auto_merge:
    needs: [ test ]
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' &&
      (github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]')
    steps:
      - name: "@dependabot merge"
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.ACTIONS_TOKEN}}
          script: |
            github.issues.createComment({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              issue_number: context.payload.pull_request.number,
              body: '@dependabot merge'
            })
